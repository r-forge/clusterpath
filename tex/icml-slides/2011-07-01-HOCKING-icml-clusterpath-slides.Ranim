% -*- mode: noweb; noweb-code-mode: R-mode -*-
\documentclass{beamer}
    %tdh from http://stackoverflow.com/questions/2320776/remove-the-slide-count-from-beamer-footer
    \usetheme{Madrid}

      %#make sure to change this part, since it is predefined
      %\defbeamertemplate*{footline}{infolines theme}
      \setbeamertemplate{footline}
        {
      \leavevmode%
      \hbox{%
      \begin{beamercolorbox}[wd=.4\paperwidth,ht=2.25ex,dp=1ex,center]{author in head/foot}%
        \usebeamerfont{author in head/foot}\insertshortauthor (\insertshortinstitute)
      \end{beamercolorbox}%
      \begin{beamercolorbox}[wd=.4\paperwidth,ht=2.25ex,dp=1ex,center]{title in head/foot}%
        \usebeamerfont{title in head/foot}\insertshorttitle
      \end{beamercolorbox}%
      \begin{beamercolorbox}[wd=.2\paperwidth,ht=2.25ex,dp=1ex,right]{date in head/foot}%
        \usebeamerfont{date in head/foot}\insertshortdate{}\hspace*{2em}

    %#turning the next line into a comment, erases the frame numbers
        %\insertframenumber{} / \inserttotalframenumber\hspace*{2ex} 

      \end{beamercolorbox}}%
      \vskip0pt%
    }


\newcommand{\minimize}[3]{
\begin{aligned}
&  \min_{#1} && #2\\
&  \text{subject to}&& #3
\end{aligned}
}


\usepackage{amsmath,amssymb}
\usepackage{hyperref}
%\usepackage{xypic}
\usepackage{tikz} 
\usepackage[nogin]{Sweave}
\SweaveOpts{width=5,height=3.25,keep.source=TRUE}

\usepackage{graphicx}

\newcommand{\sign}{\operatorname{sign}}
\begin{document}

\title[Clusterpath for hierarchical convex clustering]{ Clusterpath:
  \\an algorithm for clustering using convex fusion penalties}
\institute[INRIA Paris]{Sierra team --- INRIA Paris\\Mines ParisTech /
  Curie Institute / INSERM}
\author[Toby Dylan Hocking \emph{et al.}]{Toby Dylan Hocking\\toby.hocking@inria.fr\\\url{http://cbio.ensmp.fr/~thocking/}\\
  {\small joint work with Armand Joulin, Francis Bach, and
    Jean-Philippe Vert}} \date{1 July 2011}

\maketitle
\section[Outline]{}

\frame{\tableofcontents}

\newcommand{\framet}[2]{\frame{\frametitle{#1}
  \begin{itemize}
      #2
    \end{itemize}
}}

\newcommand{\picframe}[1]{
  \frame[plain]{
%    \includegraphics[width=\textwidth]{#1}
  }
}
\newcommand{\norm}[1]{|\!|#1|\!|}
\newcommand{\minof}[1]{
  \underset{#1}{\min}
}

\newcommand{\RR}{\mathbb R}

\section{Introduction: framing clustering as a convex optimization
  problem results in the clusterpath}

\begin{frame}
  \frametitle{Existing clustering methods have some drawbacks}
  \begin{minipage}{2in}
  \begin{itemize}
  \item Clustering: assign labels to $n$ points in $p$ dimensions
    $X\in\RR^{n\times p}$.
  \item Methods:
    \begin{itemize}
  \item K-means
  \item Hierarchical
  \item Mixture models
  \item Spectral (Ng \emph{et al.} 2001)
  \item ... 
    \end{itemize}
    \item Issues:
    \begin{itemize}
    \item Hierarchy
    \item Convexity
    \item Greediness
    \item Stability
  \end{itemize}
  \end{itemize}
  \end{minipage}
  \begin{minipage}{2in}
  \end{minipage}
\end{frame}

\begin{frame}
  \frametitle{Our contributions:}
  \begin{itemize}
  \item A new \alert<1>{convex} objective function for clustering.
  \item Interpretable, \alert<1>{hierarchical} clusterpath.
  \item Efficient algorithms.
  \item Clustering \alert<1>{performance} on par with spectral clustering.
  \end{itemize}
  \includegraphics[width=\textwidth]{moons-clusterpath}
\end{frame}


<<fig=FALSE,tikz=FALSE,echo=FALSE,results=hide>>=
library(clusterpath)
### Figure 1. geometric interpretation
set.seed(3)
x <- replicate(2,rnorm(3))
pts <- data.frame(alpha=x,row=1:nrow(x))
getlines <- function(x){
  require(foreach)
  N <- nrow(x)
  foreach(i=1:(N-1),.combine=rbind)%do%{
    foreach(j=(i+1):N,.combine=rbind)%do%{
      start <- x[i,]
      end <- x[j,]
      data.frame(start.1=start[1],end.1=end[1],start.2=start[2],end.2=end[2],
                 norm=factor(2))
    }
  }
}
getpolys <- function(alpha.df){
  W <- attr(alpha.df,"w")
  alpha <- alpha.df[,c("row",attr(alpha.df,"alphacolnames"))]
  clusters <- unique(round(alpha[,-1],6))
  N <- nrow(clusters)
  close <- function(u,v)sqrt(sum((v-u)^2))<1e-6
  equal <- function(u)apply(alpha[,-1],1,close,u)
  polys <- data.frame()
  ws <- data.frame()
  width <- data.frame()
  for(i in 1:(N-1))for(j in (i+1):N){
    ci <- as.matrix(clusters[i,])
    cj <- as.matrix(clusters[j,])
    m <- (ci[2]-cj[2])/(ci[1]-cj[1])
    rects <- expand.grid(i=alpha[equal(ci),"row"],j=alpha[equal(cj),"row"])
    rects$wij <- W[as.matrix(rects)]
    total <- sum(rects$wij)
    ## this is the horizontal displacement from ci
    intercept <- ci[2]-ci[1]*m
    int2 <- ci[1]/m+ci[2]
    m2 <- -1/m
    iperp <- function(x)m2*(x-ci[1])+ci[2]
    jperp <- function(x)m2*(x-cj[1])+cj[2]
    xfound <- ci[1]-sqrt(((total/2)^2)/(m2^2+1))
    xoff <- abs(ci[1]-xfound)
    xvals <- xoff*c(-1,1)+ci[1]
    ## this is the angle of the rectangle from the horizontal
    wsum <- c(0,cumsum(rects$wij))
    rate <- xoff/total*2
    ix <- function(w)w*rate+ci[1]-xoff
    jx <- function(w)w*rate+cj[1]-xoff
    for(k in 1:(length(wsum)-1)){
      IX <- c(ix(wsum[k]),ix(wsum[k+1]))
      JX <- c(jx(wsum[k+1]),jx(wsum[k]))
      m <- cbind(c(IX,JX),c(iperp(IX),jperp(JX)))
      row <- t(c(start=colMeans(m[c(1,4),]),end=colMeans(m[c(2,3),])))
      width <- rbind(width,data.frame(row,rect.num=k))
      ij <- with(rects,sprintf("%d%d",i[k],j[k]))
      ws <- rbind(ws,data.frame(alpha=t(colMeans(m)),
                                label=sprintf("\\tiny$w_{%s}$",ij)))
      polys <- rbind(polys,data.frame(alpha=m,rect.num=factor(k),
                    pair=ij,row.names=NULL))
    }
  }
  list(polys=polys,clusters=clusters,ws=ws,width=width)
}
l2 <- getlines(x)
l1 <- data.frame(start=rbind(x,x),
                 end.1=c(x[1,1],x[1,1],x[3,1],x[3,1],x[3,1],x[3,1]),
                 end.2=c(x[2,2],x[2,2],x[2,2],x[1,2],x[2,2],x[1,2]),
                 norm="1")
linf <- data.frame(start=x[c(1,2,1),],
                   end.1=c(x[3,1],x[3,1],x[1,1]),
                   end.2=c(x[1,2],x[2,2],x[2,2]),
                   norm="\\infty")
lvec <- c("1","2","\\infty")
norms <- data.frame(alpha.1=-1,alpha.2=0.5,
                    label=sprintf("$\\ell_%s$",lvec),norm=lvec)
segs <- data.frame()
for(df in list(l1,l2,linf)){
  segs <- rbind(segs,df[,names(l1)])
}
library(ggplot2)
theme_set(theme_bw())
## calculate this first to get proper scale
#path <- cvxmod.cluster(x,regularization.points=20)
#biggest <- path[path$s==1,]
 #big.polys <- getpolys(biggest)
interpretation <- function(...){
  p <- ggplot(NULL,aes(alpha.1,alpha.2))+
    coord_equal()+
    scale_x_continuous("$\\alpha^1$",limits=c(-1.1,0.4),breaks=c(-10))+
    scale_y_continuous("$\\alpha^2$",limits=c(-1.3,0.6),breaks=c(-10))+
    geom_text(aes(label=label),
            data=data.frame(alpha.1=c(-1,x[2,1]-0.05,0.35),
              alpha.2=c(-1.25,0.35,x[3,2]),
              label=sprintf("\\scriptsize$X_%d$",1:3)))
    #geom_blank(data=big.polys$polys)
  L <- list(...)
  for(l in L)p <- p+l
  p+  geom_point(data=pts,pch=21,fill="white")
}
drawlines <- function(N){
interpretation(
  geom_segment(aes(start.1,start.2,xend=end.1,yend=end.2),
               data=subset(segs,norm==N),lwd=2,colour="grey"),
  geom_text(aes(label=label),data=subset(norms,norm==N))
)
}
@ 

\begin{frame}
  \frametitle{The clusterpath relaxes a hard fusion penalty}
  \begin{minipage}{2in}
    Want some points to be equal $\alpha_i=\alpha_j$:
  \begin{itemize}
$$
  \minimize{
    \alpha\in\RR^{n\times p}}{
    \frac 1 2 ||\alpha-X||_F^2}{
    \sum_{i<j}1_{\alpha_i\neq\alpha_j} \leq t}
$$
\item Combinatorial! We propose to relax the constraint:
$$
    \sum_{i<j}||\alpha_i-\alpha_j||_q w_{ij}\leq t
$$
\item The ``clusterpath'' is the continuous path of optimal $\alpha$
  obtained by varying $t$.
\item Related work: ``fused lasso'' Tibshirani and Saunders (2005),
``grouping pursuit'' Shen and Huang (2010), ``sum of norms'' Lindsten
\emph{et al.}  (2011).
  \end{itemize}
  \end{minipage}
  \begin{minipage}{2.5in}
<<fig=T,tikz=T,external=T,echo=FALSE,results=hide,width=3,height=3.25>>=
aplot <- interpretation()+
  geom_point(data=data.frame(alpha.1=c(-0.88,-0.05),alpha.2=c(-1.04,0.06)))+
  geom_text(aes(label=label),
            data.frame(alpha.1=c(-0.8,-0.5),alpha.2=c(-1.05,0.1),
                       label=c("\\scriptsize$\\alpha_1$",
                         "\\scriptsize$\\alpha_{C}=\\alpha_2=\\alpha_3$")))
print(aplot)
@ 
  \end{minipage}
\end{frame}



ANIMATION(lines)


<<results=hide,echo=FALSE,fig=FALSE>>=
path <- cvxmod.cluster(x,regularization.points=40)
plotpolys <- function(Slim){
  SVAL <- min(subset(path,s>=Slim)$s)
a <- path[path$s==SVAL,]
poly.list <- getpolys(a)
interpretation(
  geom_polygon(aes(group=interaction(pair,rect.num)),
               data=data.frame(poly.list$polys),
               fill="grey",colour="white",lwd=1.2),
  geom_segment(aes(start1,start2,xend=end1,yend=end2),
               data=data.frame(poly.list$width),
               colour="white"),
  geom_text(aes(label=label),data=subset(norms,norm=="2")),
  geom_text(aes(label=label),data=data.frame(poly.list$ws)),
  geom_path(aes(group=row),data=data.frame(path),
            subset=.(s>=SVAL)),
               geom_point(data=data.frame(a))
                     )
}
@ 

ANIMATION(rects)

<<fig=FALSE,echo=FALSE,results=hide>>=
set.seed(19) 
sim <- gendata(N=5,D=2,K=2,SD=0.6)
## cvx <- data.frame()
## for(norm in c(1,2,"inf"))for(gamma in c(0,1)){
##   cvx <- rbind(cvx,cvxmod.cluster(sim$mat,norm=norm,gamma=gamma,
##                                   regularization.points=50))
## }
load(url("http://cbio.ensmp.fr/~thocking/clusterpath-figure-2.RData"))
means <- data.frame(alpha=t(colMeans(sim$mat)))
normweights <- function(var,val){
  val <- as.character(val)
  if(var=="gamma")var <- "\\gamma"
  else var <- sprintf("\\textrm{%s}",var)
  val[val=="inf"] <- "\\infty"
  sprintf("$%s=%s$",var,val)
}
plot.one <- function(S){
  path <- data.frame(subset(cvx,s>=S),points="$\\alpha$")
  alpha <- subset(path,s==min(s))
  xx <- alpha
  xx[,1] <- sim$mat[,1]
  xx[,2] <- sim$mat[,2]
  xx$points <- "$X$"
  xalpha <- rbind(alpha,xx)
ggplot(path,aes(alpha.2,alpha.1))+
  geom_path(aes(group=row),lwd=1)+
  facet_grid(gamma~norm,labeller=normweights)+
  coord_equal()+
  ##scale_colour_manual(values=c("$\\alpha$"="black","$X$"="blue"))+
  geom_point(data=xx,fill="white",pch=21)+
  scale_x_continuous("",breaks=-10)+
  scale_y_continuous("",breaks=-10)
}
@   

ANIMATION(panels)

\frame{\tableofcontents}

\section{Algorithms proposed to solve the clusterpath}

\begin{frame}
  \frametitle{An efficient path algorithm for the $\ell_1$ clusterpath}
  \begin{itemize}
\item Objective separable on each dimension $\alpha^k\in\RR^n$:
  $$\min_\alpha f_1(\alpha)= \sum_{k=1}^p\sum_{i=1}^n(X_{ik}-\alpha_{ik})^2
  +\lambda\sum_{i<j}|\alpha_{ik}-\alpha_{jk}|w_{ij}=\sum_{k=1}^p\min_{\alpha^k}f_1(\alpha^k)$$
\item LARS-like path-following algorithm (Hoefling \emph{et al.}\
  2009), checks for split of a cluster of size $n_C$ by solving a
  max-flow problem: $O(n_C^3)$. \pause
\item \textbf{Theorem}: the $\ell_1$ clusterpath with $w_{ij}=1$ is strictly
  agglomerative, so no need to check for splits.
\item $n-1$ joins on each of $p$ dimensions. Each join only costs
  $O(\log n)$ using queues and linked lists: $O(pn\log n)$.
\end{itemize}
\end{frame}

\begin{frame}
  \frametitle{We propose dedicated solvers for each norm}
\begin{center}
\begin{tabular}{ccccc}
\hline
Norm & Properties & Algorithm &Complexity & Problem sizes \\
\hline
1 &piecewise linear&path&$O(pn\log n)$&large $\approx 10^5$  \\
 & separable\\
 &\\
2 &rotation invariant&active-set& $O(n^2p)$&medium $\approx10^3$ \\
&\\
$\infty$ & piecewise linear&Frank-Wolfe&unknown*&medium $\approx 10^3$\\
\hline
\end{tabular}
\end{center}
*each iteration of complexity $O(n^2p)$.
\end{frame}

\begin{frame}
  \frametitle{The spectral clusterpath}
  Standard spectral clustering:
  \begin{itemize}
  \item Pairwise similarities: $W_{ij}=\exp(-\gamma||X_i-X_j||_2^2)$.
  \item Normalized Laplacian: $L=D-W$.
  \item K-means on the first few eigenvectors of $L$.
  \end{itemize}
  2 possible problems with spectral clustering:
  \begin{itemize}
  \item Hard-thresholding when picking the first few eigenvectors.
  \item K-means on eigenvectors.
  \end{itemize}
  We propose:
  \begin{itemize}
  \item Soft-thresholding eigenvectors based on eigenvalues.
  \item Clusterpath on eigenvectors.
  \end{itemize}
\end{frame}

\frame{\tableofcontents}

\section{Results, conclusions, and open questions}

\begin{frame}
  \frametitle{Typical results for several clustering algorithms}
  \includegraphics[width=\textwidth]{moons}

  Weighted $\ell_2$ clusterpath with $\gamma=2$.
\end{frame}

\begin{frame}
  \frametitle{Conclusions: our contributions}
  \begin{itemize}
  \item We proposed a new family of \alert<1>{convex} objective
    functions for clustering.
  \item Using $w_{ij}=1$ with the $\ell_1$ norm, we have
    \alert<1>{hierarchical} clustering and complexity $O(pn\log n)$.
\item \alert<1>{Performance} of weighted $\ell_2$ similar to spectral
  clustering.
\item Free, open-source R/C++/Python optimization software available:
  \url{http://clusterpath.r-forge.r-project.org}
  \end{itemize}
\end{frame}
  
\begin{frame}
  \frametitle{Open questions}
  \begin{itemize}
  \item Benefit of relaxing the eigenvector thresholding in spectral
    clustering. Generality?
  \item Open question: hierarchical clusterpath for which other weights
    and norms?
  \item Learning the weights and number of clusters automatically?
  \end{itemize}
  \only<2>{Thank you, any questions? \\You can contact me directly at
    toby.hocking@inria.fr.}
\end{frame}

\end{document}
